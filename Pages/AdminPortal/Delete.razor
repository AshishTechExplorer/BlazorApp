<div class="modal" id="ModalHelp" tabindex="-1" role="dialog" aria-labelledby="ModalHelpTitle" aria-hidden="true"
     style="@(IsVisible ? "display: block;" : "display: none;")">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title roboto-medium text-center" id="exampleModalLongTitle">Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>@ChildContent</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light roboto-condensed-regular" @onclick="CloseAsync">Close</button>
                &nbsp;
                <button type="button" class="btn btn-light roboto-condensed-regular" @onclick="ConfirmAsync">Save changes</button>
            </div>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public EventCallback<bool> OnConfirm { get; set; }

    [Parameter]
    public EventCallback<bool> IsVisibleChanged { get; set; }



    private async Task CloseAsync()
    {
        IsVisible = false;
        await IsVisibleChanged.InvokeAsync(IsVisible);
    }

    private async Task ConfirmAsync()
    {
        await OnConfirm.InvokeAsync();
        await CloseAsync();
    }
}